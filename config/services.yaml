# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    encryption_key: '%env(ENCRYPTION_KEY)%'
    personal_string: '%env(PERSONAL_STRING)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Queue\Doctrine\Customer\CustomerCreatedConsumer:
        arguments:
#            $mailer: '@mailer'
#            $urlGenerator: '@router.default'

    Symfony\Component\PasswordHasher\Hasher\NativePasswordHasher:
        public: true

    App\Service\CryptoService:
        arguments:
            $params: '@parameter_bag'

    App\Service\VerificationWhatsAppService:
        arguments:
            $apiUrl: '%env(WAZZUP_API_URL)%'
            $apiToken: '%env(WAZZUP_API_TOKEN)%'

    App\EventListener\CustomerHasNoteListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    App\EventListener\CustomerContactStatusListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    App\EventListener\CustomerNoteHasBeneficiaryListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    App\Middleware\CheckCustomerExistenceMiddleware:
        tags:
            - { name: 'messenger.middleware', priority: 100 }

    App\EventSubscriber\LocaleSubscriber: ~


